services:
  # nginx:
  #   hostname: nginx
  #   container_name: nginx
  #   image: nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ../proxy/nginx.dev.conf:/etc/nginx/conf.d/default.conf
  #     - ../proxy/logs:/var/log/nginx 
  #   restart: always
  #   networks:
  #     - skyforest-systems
      
  uploader:
    container_name: uploader
    hostname: uploader
    build: 
      context: ../uploader
    environment:
      - REDIS_URL=redis://redis:6379
      - GEOSERVER_URL=http://geoserver:8080/geoserver
      - GEOSERVER_USERNAME=admin
      - GEOSERVER_PASSWORD=geoserver
      - RASTER_EXTENSIONS=.jpg,.jpeg
      - POINTS_EXTENSIONS=.geojson,.shp,.kml,.sld
      - ANALYSIS_EXTENSIONS=.tif,.geotiff,.tiff
    restart: always
    volumes:
      - ../uploader/output:/app/output
      - ../uploader/files:/app/files
    networks:
      - skyforest-systems

  redis:
    container_name: redis
    hostname: redis
    image: redis:7-alpine
    restart: always
    networks:
      - skyforest-systems
    ports:
      - "6379:6379"
      
  redis-insight:
    container_name: redis-insight
    hostname: redis-insight
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "81:5540"
    volumes:
      - redis-insight:/data
    networks:
      - skyforest-systems
  
  geoserver:
    container_name: geoserver
    build:
      context: ../
      dockerfile: Dockerfile.geoserver
    hostname: geoserver
    restart: always
    healthcheck:
      test: ["CMD", "curl", "localhost:8080/geoserver/rest/workspaces"]
      interval: 10s
      timeout: 10s
      retries: 50
      start_period: 30s
    ports:
      - 8080:8080
    volumes:
      - ../geoserver:/opt/geoserver_data
      - ../uploader/files:/files 
      - ../uploader/output:/output 
    networks:
      - skyforest-systems
  
  # colossus:
  #   image: skyforestab/colossus:latest
  #   container_name: colossus
  #   build:
  #     context: ../colossus
  #     dockerfile: Dockerfile
  #   hostname: colossus
  #   restart: always
  #   environment:
  #     - PORT=3000
  #     - GEOSERVER_URL=https://map.skyforest.se/geoserver
  #     - BASE_PATH=/colossus
  #   ports:
  #     - 3001:3000
  #   networks:
  #     - skyforest-systems

  # shipyard:
  #   image: skyforestab/shipyard:latest
  #   container_name: shipyard
  #   hostname: shipyard
  #   build: 
  #     context: ../shipyard
  #   env_file: ../shipyard/.env
  #   ports:
  #     - 3002:3000
  #   networks:
  #     - skyforest-systems

volumes:
  redis-insight:
  # skyforest:
  #   external: true

networks:
  skyforest-systems:
