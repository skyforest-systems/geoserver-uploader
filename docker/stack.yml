services:
  nginx:
    hostname: nginx
    container_name: nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - C:/skyforest-uploader/proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - C:/skyforest-uploader/proxy/certbot:/etc/letsencrypt  
      - C:/skyforest-uploader/proxy/logs:/var/log/nginx 
      - C:/skyforest-uploader/proxy/webroot:/var/www/certbot
    restart: always
    networks:
      - skyforest-systems

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - C:/skyforest-uploader/proxy/certbot:/etc/letsencrypt 
      - C:/skyforest-uploader/proxy/logs:/var/log/nginx 
      - C:/skyforest-uploader/proxy/webroot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $$!; certbot renew; done'"
    depends_on:
      - nginx
    networks:
      - skyforest-systems

  uploader:
    container_name: uploader
    hostname: uploader
    image: skyforestab/geoserver-uploader:latest
    build: 
      context: ../
    environment:
      - REDIS_URL=redis://redis:6379
      - GEOSERVER_URL=http://geoserver:8080/geoserver
      - GEOSERVER_USERNAME=admin
      - GEOSERVER_PASSWORD=geoserver
      - RASTER_EXTENSIONS=.jpg,.jpeg
      - POINTS_EXTENSIONS=.geojson,.shp,.kml,.sld
      - ANALYSIS_EXTENSIONS=.tif,.geotiff,.tiff
    restart: always
    volumes:
      - D:/GEOSERVER_DATA:/app/files
      - skyport:/app/files
    networks:
      - skyforest-systems

  redis:
    container_name: redis
    hostname: redis
    image: redis:7-alpine
    restart: always
    networks:
      - skyforest-systems
    volumes:
      - C:/skyforest-uploader/redis:/data
    ports:
      - "6379:6379"
      
  redis-insight:
    container_name: redis-insight
    hostname: redis-insight
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "81:5540"
    volumes:
      - redis-insight:/data
    networks:
      - skyforest-systems
  
  geoserver:
    container_name: geoserver
    build:
      context: ../
      dockerfile: Dockerfile.geoserver
    hostname: geoserver
    image: skyforestab/geoserver:latest
    restart: always
    healthcheck:
      test: ["CMD", "curl", "localhost:8080/geoserver/rest/workspaces"]
      interval: 10s
      timeout: 10s
      retries: 50
      start_period: 30s
    environment:
      - GEOSERVER_CSRF_WHITELIST=map.skyforest.se,skyforest.se,80.86.77.156:8080
      - EXTRA_JAVA_OPTS=-Xms2g -Xmx8g
    ports:
      - 8080:8080
    volumes:
      - C:/skyforest-uploader/geoserver:/opt/geoserver_data
      - D:/GEOSERVER_DATA:/files 
      - skyport:/files
    networks:
      - skyforest-systems
    
  colossus:
    image: skyforestab/colossus:latest
    container_name: colossus
    hostname: colossus
    restart: always
    environment:
      - PORT=3000
      - GEOSERVER_URL=http://geoserver:8080/geoserver
      - BASE_PATH=/colossus
    networks:
      - skyforest-systems

  shipyard:
    image: skyforestab/shipyard:latest
    container_name: shipyard
    hostname: shipyard
    environment:
      - GEOSERVER_USER=skyforest
      - GEOSERVER_PASSWORD=3edXBMqGZr4yGUi
      - GEOSERVER_URL=http://geoserver:8080/geoserver
    networks:
      - skyforest-systems

  watchtower:
    container_name: watchtower
    hostname: watchtower
    image: containrrr/watchtower
    restart: always
    command: --interval 30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - skyforest-systems
  
  filebrowser:
    container_name: filebrowser
    hostname: filebrowser
    image: filebrowser/filebrowser
    restart: always
    user: "1000:1000"
    ports:
      - 8081:80
    volumes:
      - C:/skyforest-uploader/filebrowser/filebrowser.db:/database.db
      - C:/skyforest-uploader/filebrowser/.filebrowser.json:/.filebrowser.json
      - D:/GEOSERVER_DATA:/srv

volumes:
  redis-insight:
  skyport:
    external: true

networks:
  skyforest-systems:
    external:
      name: skyforest-systems
