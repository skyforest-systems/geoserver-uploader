# Upstream for Portainer
upstream portainer {
    server portainer:9000;
}

# HTTP server block to handle Certbot challenges and redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name map.skyforest.se; # Replace with your actual domain name

    # Location for Certbot ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

upstream minio_s3 {
   least_conn;
   server minio:9000;
}

upstream minio_console {
   least_conn;
   server minio:9001;
}

# HTTPS server block
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name map.skyforest.se; # Replace with your actual domain name

    # SSL certificate configuration
    ssl_certificate /etc/letsencrypt/live/map.skyforest.se/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/map.skyforest.se/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

     # Allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 100000m;
    # Disable buffering
    proxy_buffering off;
    proxy_request_buffering off;

    # Proxy configuration for uploader service
    location / {
        proxy_pass http://shipyard:3000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Proxy configuration for colossus service
    location ^~ /colossus/ {
        rewrite ^/colossus/(.*) /$1 break;
        proxy_pass http://colossus:3000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Proxy configuration for GeoServer
    location ^~ /geoserver/ {
        proxy_pass http://geoserver:8080/geoserver/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Proxy configuration for Filebrowser
    location ^~ /browser/ {
        proxy_pass http://filebrowser:80/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Proxy configuration for Portainer
    location /portainer/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://portainer/;
    }

    # WebSocket proxy for Portainer
    location /portainer/api/websocket/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://portainer/api/websocket/;
    }

    # Proxy configuration for Dozzle
    location /dozzle/ {
        include  /etc/nginx/mime.types;
        proxy_pass http://dozzle:8080;
        proxy_redirect     off;
    }

    location /storage/ {
      rewrite ^/storage/(.*) /$1 break;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_connect_timeout 300;
      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      chunked_transfer_encoding off;

      proxy_pass https://minio_s3; # This uses the upstream directive definition to load balance
   }

   location /minio/ {
      rewrite ^/minio/(.*) /$1 break;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-NginX-Proxy true;

      # This is necessary to pass the correct IP to be hashed
      real_ip_header X-Real-IP;

      proxy_connect_timeout 300;

      # To support websockets in MinIO versions released after January 2023
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
      # Uncomment the following line to set the Origin request to an empty string
      # proxy_set_header Origin '';

      chunked_transfer_encoding off;

      proxy_pass https://minio_console; # This uses the upstream directive definition to load balance
   }
}
